SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
-- ==================================================================================================================================================================================-- Versión:				<1.0>-- Creado por:			<Aida Elena Siles R>-- Fecha de creación:	<12/07/2021>-- Descripción:			<Permite consultar un registro en la tabla: PaseFallo.>-- ==================================================================================================================================================================================-- Modificación:		<17/08/2021> <Aida Elena Siles R> <Se agrega el tipo motivo del motivo de devolución.>-- ==================================================================================================================================================================================CREATE PROCEDURE	[Historico].[PA_ConsultarPaseFallo]	@CodPaseFallo				UNIQUEIDENTIFIER	= NULL,	@NumeroExpediente			CHAR(14),	@CodLegajo					UNIQUEIDENTIFIER	= NULL,	@CodContexto				VARCHAR(4)			= NULLASBEGIN	--Variables	DECLARE	@L_TU_CodPaseFallo			UNIQUEIDENTIFIER	= @CodPaseFallo,			@L_NumeroExpediente			CHAR(14)			= @NumeroExpediente,			@L_CodLegajo				UNIQUEIDENTIFIER	= @CodLegajo,			@L_CodContexto				VARCHAR(4)			= @CodContexto,			@L_Horas					SMALLINT		IF (@L_CodLegajo IS NOT NULL)	BEGIN		--Lógica		SELECT		A.TU_CodPaseFallo					Codigo,					A.TF_FechaAsignacion				FechaAsignacion,					A.TF_FechaDevolucion				FechaDevolucion,					A.TF_FechaVencimiento				FechaVencimiento,					(SELECT [Expediente].[FN_HorasPendientesFechaVence] ((COALESCE(@L_CodContexto,A.TC_CodContexto)), A.TF_FechaVencimiento))	HorasPendientes,					'split'								split,--Funcionario asigna					B.TC_Nombre							Nombre,					B.TC_PrimerApellido					PrimerApellido,					B.TC_SegundoApellido				SegundoApellido,					'split'								split, --OtrosDatos					A.TC_NumeroExpediente				NumeroExpediente,					A.TU_CodLegajo						CodLegajo,					A.TU_CodTareaAsigna					CodTareaAsigna,					A.TU_CodTareaDevuelve				CodTareaDevuelve,					A.TN_CodMotivoDevolucion			CodMotivoDevolucion,					A.TU_CodArchivo						CodArchivo,					A.TC_CodContexto					CodContexto,					H.TC_CodMateria						CodMateria,					C.TC_TipoMotivo						TipoMotivo,					'split'								split, --MotivoDevolucion					C.TN_CodMotivoDevolucion			Codigo,					C.TC_Descripcion					Descripcion,					'split'								split, --Resolucion					D.TU_CodResolucion					CodigoResolucion,					E.TU_CodPuestoFuncionario			CodigoPTFuncionarioRedactor,					F.TC_Nombre							NombreRedactor,					F.TC_PrimerApellido					PrimerApellidoRedactor,					F.TC_SegundoApellido				SegundoApellidoRedactor,					D.TF_FechaResolucion				FechaResolucion,					G.TC_NumeroResolucion				NumeroResolucion		FROM		Historico.PaseFallo					A WITH (NOLOCK)		INNER JOIN  Catalogo.Funcionario				B WITH (NOLOCK)		ON			A.TC_UsuarioRedAsigna				= B.TC_UsuarioRed		LEFT JOIN	Catalogo.MotivoDevolucionPaseFallo	C WITH(NOLOCK)		ON			A.TN_CodMotivoDevolucion			= C.TN_CodMotivoDevolucion		LEFT JOIN   Expediente.Resolucion				D WITH(NOLOCK)		ON			A.TU_CodArchivo						= D.TU_CodArchivo		AND			A.TC_NumeroExpediente				= D.TC_NumeroExpediente		LEFT JOIN   Catalogo.PuestoTrabajoFuncionario   E WITH(NOLOCK)		ON			D.TU_RedactorResponsable			= E.TU_CodPuestoFuncionario		LEFT JOIN   Catalogo.Funcionario				F WITH(NOLOCK)		ON			E.TC_UsuarioRed						= F.TC_UsuarioRed		LEFT JOIN   Expediente.LibroSentencia			G WITH(NOLOCK)		ON			D.TU_CodResolucion					= G.TU_CodResolucion		INNER JOIN  Catalogo.Contexto					H WITH(NOLOCK)		ON			A.TC_CodContexto					= H.TC_CodContexto		WHERE		A.TU_CodPaseFallo					= COALESCE(@L_TU_CodPaseFallo, A.TU_CodPaseFallo)		AND			A.TC_CodContexto					= COALESCE(@L_CodContexto, A.TC_CodContexto)		AND			A.TU_CodLegajo						= @L_CodLegajo		ORDER BY	A.TF_FechaAsignacion	END	ELSE	BEGIN		--Lógica		SELECT		A.TU_CodPaseFallo					Codigo,					A.TF_FechaAsignacion				FechaAsignacion,					A.TF_FechaDevolucion				FechaDevolucion,					A.TF_FechaVencimiento				FechaVencimiento,					(SELECT [Expediente].[FN_HorasPendientesFechaVence] ((COALESCE(@L_CodContexto,A.TC_CodContexto)), A.TF_FechaVencimiento))	HorasPendientes,					'split'								split,--Funcionario asigna					B.TC_Nombre							Nombre,					B.TC_PrimerApellido					PrimerApellido,					B.TC_SegundoApellido				SegundoApellido,					'split'								split, --OtrosDatos					A.TC_NumeroExpediente				NumeroExpediente,					A.TU_CodLegajo						CodLegajo,					A.TU_CodTareaAsigna					CodTareaAsigna,					A.TU_CodTareaDevuelve				CodTareaDevuelve,					A.TN_CodMotivoDevolucion			CodMotivoDevolucion,					A.TU_CodArchivo						CodArchivo,					A.TC_CodContexto					CodContexto,					H.TC_CodMateria						CodMateria,					C.TC_TipoMotivo						TipoMotivo,					'split'								split, --MotivoDevolucion					C.TN_CodMotivoDevolucion			Codigo,					C.TC_Descripcion					Descripcion,					'split'								split, --Resolucion					D.TU_CodResolucion					CodigoResolucion,					E.TU_CodPuestoFuncionario			CodigoPTFuncionarioRedactor,					F.TC_Nombre							NombreRedactor,					F.TC_PrimerApellido					PrimerApellidoRedactor,					F.TC_SegundoApellido				SegundoApellidoRedactor,					D.TF_FechaResolucion				FechaResolucion,					G.TC_NumeroResolucion				NumeroResolucion		FROM		Historico.PaseFallo					A WITH (NOLOCK)		INNER JOIN  Catalogo.Funcionario				B WITH (NOLOCK)		ON			A.TC_UsuarioRedAsigna				= B.TC_UsuarioRed		LEFT JOIN	Catalogo.MotivoDevolucionPaseFallo	C WITH(NOLOCK)		ON			A.TN_CodMotivoDevolucion			= C.TN_CodMotivoDevolucion		LEFT JOIN   Expediente.Resolucion				D WITH(NOLOCK)		ON			A.TU_CodArchivo						= D.TU_CodArchivo		AND			A.TC_NumeroExpediente				= D.TC_NumeroExpediente		LEFT JOIN   Catalogo.PuestoTrabajoFuncionario   E WITH(NOLOCK)		ON			D.TU_RedactorResponsable			= E.TU_CodPuestoFuncionario		LEFT JOIN   Catalogo.Funcionario				F WITH(NOLOCK)		ON			E.TC_UsuarioRed						= F.TC_UsuarioRed		LEFT JOIN   Expediente.LibroSentencia			G WITH(NOLOCK)		ON			D.TU_CodResolucion					= G.TU_CodResolucion		INNER JOIN  Catalogo.Contexto					H WITH(NOLOCK)		ON			A.TC_CodContexto					= H.TC_CodContexto		WHERE		A.TU_CodPaseFallo					= COALESCE(@L_TU_CodPaseFallo, A.TU_CodPaseFallo)		AND			A.TC_CodContexto					= COALESCE(@L_CodContexto, A.TC_CodContexto)		AND			A.TC_NumeroExpediente				= @L_NumeroExpediente		AND			A.TU_CodLegajo						IS NULL		ORDER BY	A.TF_FechaAsignacion	ENDEND
GO
